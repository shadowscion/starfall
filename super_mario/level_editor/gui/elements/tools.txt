--@name super_mario/level_editor/gui/elements/tools
--@author shadowscion
--@client


--[[

]]
local editor = editor
local lotus = lotus


--[[

]]
local meta = lotus.util.CreateClass("tools", "element")


--[[

]]
function meta:OnInitialize()
    --
    self.panel = lotus.CreateElement("frame")
    self.panel:SetTitle("CONTROL PANEL")
    self.panel:SetPos(256, editor.placement.panel.h)
    self.panel:SetSize(256, 512 - editor.placement.panel.h)

    self.menu:AddElement(self.context, self.panel)

    --
    self.toolpanel = lotus.CreateElement("frame")
    self.toolpanel:SetTitle("TOOLS")
    self.toolpanel:SetPos(self.panel.frame.x, self.panel.frame.y)
    self.toolpanel:SetSize(128, 128)

    self.menu:AddElement(self.context, self.toolpanel)

    --
    self.infopanel = lotus.CreateElement("frame")
    self.infopanel:SetTitle("INFO")
    self.infopanel:SetPos(512 - 128, self.panel.frame.y)
    self.infopanel:SetSize(128, 128)

    self.menu:AddElement(self.context, self.infopanel)

    --
    self.buttons = {}

    self.buttons.placer = lotus.CreateElement("button")
    self.buttons.placer:SetText("Placer")
    self.buttons.placer:SetPos(self.toolpanel.frame.x + 3, self.toolpanel.frame.y + 2)
    self.buttons.placer:SetSize(60, 24)
    self.buttons.placer:DefaultCallbacks()
    self.buttons.placer.OnRelease = function() end
    self.buttons.placer.OnPress = function(btn)
        self.buttons.placer.active = true
        self.buttons.remover.active = false
        self.tool = "placer"
    end
    self.menu:AddElement(self.context, self.buttons.placer)

    self.buttons.remover = lotus.CreateElement("button")
    self.buttons.remover:SetText("Remover")
    self.buttons.remover:SetPos(self.toolpanel.frame.x + 65, self.toolpanel.frame.y + 2)
    self.buttons.remover:SetSize(60, 24)
    self.buttons.remover:DefaultCallbacks()
    self.buttons.remover.OnRelease = function() end
    self.buttons.remover.OnPress = function(btn)
        self.buttons.placer.active = false
        self.buttons.remover.active = true
        self.tool = "remover"
    end
    self.menu:AddElement(self.context, self.buttons.remover)

    self.buttons.placer:OnPress()

    -- save/load
    self.buttons.saver = lotus.CreateElement("button")
    self.buttons.saver:SetText("Save")
    self.buttons.saver:SetPos(self.toolpanel.frame.x + 3, self.toolpanel.frame.y + 28)
    self.buttons.saver:SetSize(60, 24)
    self.buttons.saver:DefaultCallbacks()
    self.buttons.saver.OnRelease = function() end
    self.buttons.saver.OnPress = function(btn)

    end
    self.menu:AddElement(self.context, self.buttons.saver)

    self.buttons.loader = lotus.CreateElement("button")
    self.buttons.loader:SetText("Load")
    self.buttons.loader:SetPos(self.toolpanel.frame.x + 65, self.toolpanel.frame.y + 28)
    self.buttons.loader:SetSize(60, 24)
    self.buttons.loader:DefaultCallbacks()
    self.buttons.loader.OnRelease = function() end
    self.buttons.loader.OnPress = function(btn)

    end
    self.menu:AddElement(self.context, self.buttons.loader)

    -- clearer
    self.buttons.clearer = lotus.CreateElement("button")
    self.buttons.clearer:SetText("Reset")
    self.buttons.clearer:SetPos(self.toolpanel.frame.x + 65, self.toolpanel.frame.y + 28 + 26)
    self.buttons.clearer:SetSize(60, 24)
    self.buttons.clearer:DefaultCallbacks()
    self.buttons.clearer.OnRelease = function() end
    self.buttons.clearer.OnPress = function(btn)
        if btn.stage == 2 then return end
        if not btn.stage then
            btn:SetText("Really?")
            btn.stage = 1
            timer.simple(0.5, function()
                if btn.stage == 2 then

                end
                btn.stage = nil
                btn:SetText("Reset")
            end)
            return
        end
        if btn.stage == 1 then
            btn:SetText("Poof!")
            btn.stage = 2
            return
        end
    end

    self.menu:AddElement(self.context, self.buttons.clearer)
end


--[[

]]
function meta:OnDraw()

end
